{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ismailhashi/Projects/summarizer/frontend/src/views/Home/components/MainArea/SummaryBox.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import { Paper, InputBase } from \"@material-ui/core\";\n// import TextField from \"@material-ui/core/TextField\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: \"25ch\",\n//     },\n//     display: \"flex\",\n//     flexWrap: \"wrap\"\n//   },\n//   paperWrapper: {\n//     transition: theme.transitions.create(\"all\", {\n//       easing: theme.transitions.easing.easeIn,\n//       duration: theme.transitions.duration.short,\n//     }),\n//     borderColor: theme.custom.palette.itemBorderColor,\n//     borderWidth: theme.spacing(0.1),\n//     borderStyle: \"solid\",\n//   },\n//   wrapper: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//   },\n//   inputTitleRoot: {\n//     ...theme.custom.fontFamily.metropolis,\n//     padding: theme.spacing(1.25, 2),\n//   },\n//   inputTitleInput: {\n//     fontWeight: 500,\n//     fontSize: \"1rem\",\n//     padding: 0,\n//     lineHeight: \"1rem\",\n//     verticalAlign: \"middle\",\n//     color: theme.palette.text.primary,\n//   },\n//   inputNoteRoot: {\n//     ...theme.custom.fontFamily.roboto,\n//     padding: theme.spacing(1.5, 2),\n//   },\n//   inputNoteInput: {\n//     fontWeight: 500,\n//     fontSize: \"0.85rem\",\n//     padding: 0,\n//     color: theme.palette.text.primary,\n//   },\n//   barWrapper: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     padding: theme.spacing(1, 2),\n//     justifyContent: \"space-between\",\n//   },\n// }));\n// export default function () {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   return (\n//     <Paper elevation={2} classes={{ root: classes.paperWrapper }}>\n//       <InputBase\n//         placeholder={\n//           \"Summa summarizes text to save you time. /nPaste an article, text or essay in this box and hit summarize; we'll return a shortened copy\"\n//         }\n//         classes={{\n//           root: classes.inputTitleRoot,\n//           input: classes.inputTitleInput,\n//         }}\n//       />\n//     </Paper>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Search as SearchIcon, CloseOutlined as CloseOutlinedIcon } from \"@material-ui/icons\";\nimport { Box, InputBase, IconButton, Snackbar, ClickAwayListener } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nconst useStyles = makeStyles(theme => ({\n  search: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    maxWidth: \"100%\",\n    transition: theme.transitions.create(\"all\", {\n      easing: theme.transitions.easing.easeIn,\n      duration: theme.transitions.duration.shortest\n    }),\n    marginLeft: theme.spacing(1)\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  inputInput: {\n    width: \"100%\"\n  }\n}));\n\nconst SummaryBox = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [isFocussed, setFocussed] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isShowingToast, showToast] = useState(false);\n\n  const onSearchCancel = () => {\n    setSearchTerm(\"\");\n    setFocussed(false);\n  };\n\n  const onSearch = event => {\n    setFocussed(true);\n\n    if (event.key === \"Enter\") {\n      showToast(true);\n      setFocussed(false);\n    }\n  };\n\n  const onFocusLoss = () => {\n    setFocussed(false);\n  };\n\n  const handleToastClose = () => {\n    showToast(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: onFocusLoss,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.search,\n      borderRadius: theme.shape.borderRadius,\n      bgcolor: isFocussed ? theme.palette.background.default : theme.palette.background.highlight,\n      boxShadow: isFocussed ? 2 : 0,\n      height: \"3rem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.searchIcon,\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        placeholder: \"Search\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        value: searchTerm,\n        onClick: () => setFocussed(true),\n        inputProps: {\n          \"aria-label\": \"search\"\n        },\n        onChange: event => setSearchTerm(event.target.value),\n        onKeyDown: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), isFocussed ? /*#__PURE__*/_jsxDEV(IconButton, {\n        hidden: !isFocussed,\n        onClick: onSearchCancel,\n        children: /*#__PURE__*/_jsxDEV(CloseOutlinedIcon, {\n          htmlColor: theme.custom.palette.iconColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: isShowingToast,\n        message: \"Search not implemented ;)\",\n        autoHideDuration: 2000,\n        onClose: handleToastClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SummaryBox, \"SxHQbIjPTSvkMXKym5fnZsdIlPQ=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = SummaryBox;\nexport default SummaryBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummaryBox\");","map":{"version":3,"sources":["/Users/ismailhashi/Projects/summarizer/frontend/src/views/Home/components/MainArea/SummaryBox.js"],"names":["React","useState","makeStyles","Search","SearchIcon","CloseOutlined","CloseOutlinedIcon","Box","InputBase","IconButton","Snackbar","ClickAwayListener","useTheme","useStyles","theme","search","display","justifyContent","maxWidth","transition","transitions","create","easing","easeIn","duration","shortest","marginLeft","spacing","searchIcon","width","height","alignItems","inputRoot","flex","inputInput","SummaryBox","classes","isFocussed","setFocussed","searchTerm","setSearchTerm","isShowingToast","showToast","onSearchCancel","onSearch","event","key","onFocusLoss","handleToastClose","shape","borderRadius","palette","background","default","highlight","root","input","target","value","custom","iconColor"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import { Paper, InputBase } from \"@material-ui/core\";\n// import TextField from \"@material-ui/core/TextField\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: \"25ch\",\n//     },\n//     display: \"flex\",\n//     flexWrap: \"wrap\"\n//   },\n//   paperWrapper: {\n//     transition: theme.transitions.create(\"all\", {\n//       easing: theme.transitions.easing.easeIn,\n//       duration: theme.transitions.duration.short,\n//     }),\n//     borderColor: theme.custom.palette.itemBorderColor,\n//     borderWidth: theme.spacing(0.1),\n//     borderStyle: \"solid\",\n//   },\n//   wrapper: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//   },\n//   inputTitleRoot: {\n//     ...theme.custom.fontFamily.metropolis,\n//     padding: theme.spacing(1.25, 2),\n//   },\n//   inputTitleInput: {\n//     fontWeight: 500,\n//     fontSize: \"1rem\",\n//     padding: 0,\n//     lineHeight: \"1rem\",\n//     verticalAlign: \"middle\",\n//     color: theme.palette.text.primary,\n//   },\n//   inputNoteRoot: {\n//     ...theme.custom.fontFamily.roboto,\n//     padding: theme.spacing(1.5, 2),\n//   },\n//   inputNoteInput: {\n//     fontWeight: 500,\n//     fontSize: \"0.85rem\",\n//     padding: 0,\n//     color: theme.palette.text.primary,\n//   },\n//   barWrapper: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     padding: theme.spacing(1, 2),\n//     justifyContent: \"space-between\",\n//   },\n// }));\n\n// export default function () {\n//   const classes = useStyles();\n//   const theme = useTheme();\n\n//   return (\n//     <Paper elevation={2} classes={{ root: classes.paperWrapper }}>\n//       <InputBase\n//         placeholder={\n//           \"Summa summarizes text to save you time. /nPaste an article, text or essay in this box and hit summarize; we'll return a shortened copy\"\n//         }\n//         classes={{\n//           root: classes.inputTitleRoot,\n//           input: classes.inputTitleInput,\n//         }}\n//       />\n//     </Paper>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Search as SearchIcon,\n  CloseOutlined as CloseOutlinedIcon\n} from \"@material-ui/icons\";\nimport { Box, InputBase, IconButton, Snackbar, ClickAwayListener } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    maxWidth: \"100%\",\n    transition: theme.transitions.create(\"all\", {\n      easing: theme.transitions.easing.easeIn,\n      duration: theme.transitions.duration.shortest\n    }),\n    marginLeft: theme.spacing(1)\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  inputInput: {\n    width: \"100%\"\n  }\n}));\n\nconst SummaryBox = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [isFocussed, setFocussed] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isShowingToast, showToast] = useState(false);\n  const onSearchCancel = () => {\n    setSearchTerm(\"\");\n    setFocussed(false);\n  };\n  const onSearch = (event) => {\n    setFocussed(true);\n    if (event.key === \"Enter\") {\n      showToast(true);\n      setFocussed(false);\n    }\n  }\n  const onFocusLoss = () => {\n    setFocussed(false);\n  }\n  const handleToastClose = () => {\n    showToast(false);\n  }\n\n  return (\n    <ClickAwayListener onClickAway={onFocusLoss}>\n      <Box\n        className={classes.search}\n        borderRadius={theme.shape.borderRadius}\n        bgcolor={\n          isFocussed\n            ? theme.palette.background.default\n            : theme.palette.background.highlight\n        }\n        boxShadow={isFocussed ? 2 : 0}\n        height={\"3rem\"}\n      >\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }}\n          value={searchTerm}\n          onClick={() => setFocussed(true)}\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={event => setSearchTerm(event.target.value)}\n          onKeyDown={onSearch}\n        />\n        {isFocussed ? (\n          <IconButton hidden={!isFocussed} onClick={onSearchCancel}>\n            <CloseOutlinedIcon htmlColor={theme.custom.palette.iconColor} />\n          </IconButton>\n        ) : null}\n        <Snackbar open={isShowingToast} message={\"Search not implemented ;)\"} autoHideDuration={2000} onClose={handleToastClose} />\n      </Box>\n    </ClickAwayListener>\n  );\n};\n\nexport default SummaryBox;"]},"metadata":{},"sourceType":"module"}