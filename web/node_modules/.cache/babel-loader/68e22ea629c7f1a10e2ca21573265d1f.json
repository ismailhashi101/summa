{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ismailhashi/Projects/summarizer/frontend/src/views/Register/Register.js\";\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { Paper, TextField, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"@reach/router\";\nimport Loading from \"../../components/Loading\"; //import useAxios from \"axios-hooks\";\n\nconst useStyles = makeStyles(theme => ({\n  pageWrapper: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  pageContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexGrow: \"1\"\n  },\n  boxWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(3)\n  },\n  textWelcome: { ...theme.custom.fontFamily.metropolis\n  },\n  textLogin: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.dark\n  },\n  textLoginText: { ...theme.custom.fontFamily.metropolis,\n    paddingTop: theme.spacing(3)\n  },\n  textNotice: { ...theme.custom.fontFamily.roboto,\n    lineHeight: \"unset\",\n    textAlign: \"center\",\n    paddingTop: theme.spacing(2)\n  },\n  textAttribution: {\n    padding: theme.spacing(0, 2, 2, 0),\n    textAlign: \"right\"\n  },\n  textCreator: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.dark\n  },\n  registerButtonRoot: {\n    marginTop: theme.spacing(3)\n  },\n  registerButtonText: { ...theme.custom.fontFamily.metropolis,\n    color: theme.palette.secondary.contrastText,\n    textTransform: \"capitalize\"\n  },\n  logo: {\n    height: theme.spacing(7),\n    padding: theme.spacing(0, 0, 1, 0)\n  },\n  inputRoot: {\n    '&$inputFocused $inputNotchedOutline': {\n      borderColor: theme.palette.secondary.main\n    }\n  },\n  inputNotchedOutline: {},\n  inputFocused: {},\n  inputLabelRoot: {\n    '&$inputFocused': {\n      color: theme.palette.secondary.main\n    }\n  }\n}));\nexport default function ({\n  navigate\n}) {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const inputProps = {\n    classes: {\n      root: classes.inputRoot,\n      notchedOutline: classes.inputNotchedOutline,\n      focused: classes.inputFocused\n    }\n  };\n  const inputLabelProps = {\n    classes: {\n      root: classes.inputLabelRoot,\n      focused: classes.inputFocused\n    }\n  }; // const [{ data: result = {}, loading }, doRegister] = useAxios({\n  //     url: \"/auth/register\",\n  //     method: \"POST\",\n  //     data: {\n  //         name, email, password\n  //     }\n  // }, { manual: true });\n\n  const onRegisterClick = event => {\n    event.preventDefault(); //doRegister();\n  }; //temporary\n\n\n  const result = {\n    status: \"1success\"\n  };\n  const loading = false;\n\n  if (result.status === \"success\") {\n    navigate(\"/\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.pageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: classes.pageContainer,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.boxWrapper,\n          onSubmit: onRegisterClick,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.logo,\n            src: `../logo.png`,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.textWelcome,\n            color: \"textSecondary\",\n            variant: \"subtitle1\",\n            children: \"Hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            InputLabelProps: inputLabelProps,\n            InputProps: inputProps,\n            name: \"name\",\n            label: \"Name\",\n            type: \"text\",\n            variant: \"outlined\",\n            value: name,\n            onChange: event => setName(event.target.value),\n            error: result.status === \"failure\",\n            helperText: result.errors && result.errors[\"name\"] && result.errors[\"name\"][0],\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            InputLabelProps: inputLabelProps,\n            InputProps: inputProps,\n            name: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            variant: \"outlined\",\n            value: email,\n            error: result.status === \"failure\",\n            helperText: result.errors && (result.errors[\"email\"] && result.errors[\"email\"][0] || result.errors[\"\"] && result.errors[\"\"][0]) || \"Use any dummy email. I don't collect emails ;)\",\n            onChange: event => setEmail(event.target.value),\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            InputLabelProps: inputLabelProps,\n            InputProps: inputProps,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            variant: \"outlined\",\n            value: password,\n            error: result.status === \"failure\",\n            helperText: result.errors && result.errors[\"password\"] && result.errors[\"password\"][0],\n            onChange: event => setPassword(event.target.value),\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            classes: {\n              root: classes.registerButtonRoot,\n              label: classes.registerButtonText\n            },\n            type: \"submit\",\n            disabled: email === \"\" || password === \"\",\n            variant: \"contained\",\n            color: \"secondary\",\n            disableElevation: true,\n            fullWidth: true,\n            size: \"large\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.textNotice,\n            color: \"textSecondary\",\n            variant: \"caption\",\n            children: [\"Your user login & data will be deleted\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 150\n            }, this), \"on container restart, and happens so\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 192\n            }, this), \"often as I'm running this on Free Tier\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 236\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.textLoginText,\n        color: \"textSecondary\",\n        variant: \"body2\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.textLogin,\n          to: \"/login\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 126\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.textAttribution,\n      color: \"textSecondary\",\n      variant: \"body2\",\n      children: [\"Created by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classes.textCreator,\n        children: \"Ismail Hashi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/ismailhashi/Projects/summarizer/frontend/src/views/Register/Register.js"],"names":["React","useState","Container","Paper","TextField","Button","Typography","makeStyles","Link","Loading","useStyles","theme","pageWrapper","height","display","flexDirection","pageContainer","alignItems","justifyContent","flexGrow","boxWrapper","padding","spacing","textWelcome","custom","fontFamily","metropolis","textLogin","textDecoration","color","palette","secondary","dark","textLoginText","paddingTop","textNotice","roboto","lineHeight","textAlign","textAttribution","textCreator","registerButtonRoot","marginTop","registerButtonText","contrastText","textTransform","logo","inputRoot","borderColor","main","inputNotchedOutline","inputFocused","inputLabelRoot","navigate","classes","name","setName","email","setEmail","password","setPassword","inputProps","root","notchedOutline","focused","inputLabelProps","onRegisterClick","event","preventDefault","result","status","loading","target","value","errors","label"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { Paper, TextField, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"@reach/router\";\nimport Loading from \"../../components/Loading\";\n\n//import useAxios from \"axios-hooks\";\n\n\nconst useStyles = makeStyles(theme => ({\n    pageWrapper: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    pageContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexGrow: \"1\"\n    },\n    boxWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: theme.spacing(3)\n    },\n    textWelcome: {\n        ...theme.custom.fontFamily.metropolis\n    },\n    textLogin: {\n        textDecoration: \"none\",\n        color: theme.palette.secondary.dark\n    },\n    textLoginText: {\n        ...theme.custom.fontFamily.metropolis,\n        paddingTop: theme.spacing(3)\n    },\n    textNotice: {\n        ...theme.custom.fontFamily.roboto,\n        lineHeight: \"unset\",\n        textAlign: \"center\",\n        paddingTop: theme.spacing(2)\n    },\n    textAttribution: {\n        padding: theme.spacing(0, 2, 2, 0),\n        textAlign: \"right\"\n    },\n    textCreator: {\n        textDecoration: \"none\",\n        color: theme.palette.secondary.dark\n    },\n    registerButtonRoot: {\n        marginTop: theme.spacing(3)\n    },\n    registerButtonText: {\n        ...theme.custom.fontFamily.metropolis,\n        color: theme.palette.secondary.contrastText,\n        textTransform: \"capitalize\"\n    },\n    logo: {\n        height: theme.spacing(7),\n        padding: theme.spacing(0, 0, 1, 0)\n    },\n    inputRoot: {\n        '&$inputFocused $inputNotchedOutline': {\n            borderColor: theme.palette.secondary.main\n        },\n    },\n    inputNotchedOutline: {},\n    inputFocused: {},\n    inputLabelRoot: {\n        '&$inputFocused': {\n            color: theme.palette.secondary.main\n        },\n    }\n}));\n\nexport default function ({ navigate }) {\n    const classes = useStyles();\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const inputProps = {\n        classes: {\n            root: classes.inputRoot,\n            notchedOutline: classes.inputNotchedOutline,\n            focused: classes.inputFocused\n        }\n    }\n    const inputLabelProps = {\n        classes: {\n            root: classes.inputLabelRoot,\n            focused: classes.inputFocused\n        }\n    }\n    // const [{ data: result = {}, loading }, doRegister] = useAxios({\n    //     url: \"/auth/register\",\n    //     method: \"POST\",\n    //     data: {\n    //         name, email, password\n    //     }\n    // }, { manual: true });\n    const onRegisterClick = (event) => {\n        event.preventDefault();\n        //doRegister();\n    }\n\n    //temporary\n    const result = {status: \"1success\"}\n    const loading = false\n    if (result.status === \"success\") {\n        navigate(\"/\");\n        return (<></>)\n    } else if (loading) {\n        return (<Loading />)\n    }\n    return (\n        <div className={classes.pageWrapper}>\n            <Container maxWidth=\"md\" className={classes.pageContainer}>\n                <Paper elevation={3}>\n                    <form className={classes.boxWrapper} onSubmit={onRegisterClick}>\n                        <img className={classes.logo} src={`../logo.png`} alt={\"logo\"} />\n                        <Typography className={classes.textWelcome} color=\"textSecondary\" variant=\"subtitle1\">Hello!</Typography>\n                        <TextField required InputLabelProps={inputLabelProps} InputProps={inputProps} name=\"name\" label=\"Name\" type=\"text\" variant=\"outlined\" value={name} onChange={event => setName(event.target.value)} error={result.status === \"failure\"} helperText={result.errors && result.errors[\"name\"] && result.errors[\"name\"][0]} fullWidth margin=\"normal\" />\n                        <TextField required InputLabelProps={inputLabelProps} InputProps={inputProps} name=\"email\" label=\"Email\" type=\"email\" variant=\"outlined\" value={email} error={result.status === \"failure\"} helperText={(result.errors && ((result.errors[\"email\"] && result.errors[\"email\"][0]) || (result.errors[\"\"] && result.errors[\"\"][0]))) || \"Use any dummy email. I don't collect emails ;)\"} onChange={event => setEmail(event.target.value)} fullWidth margin=\"normal\" />\n                        <TextField required InputLabelProps={inputLabelProps} InputProps={inputProps} name=\"password\" label=\"Password\" type=\"password\" variant=\"outlined\" value={password} error={result.status === \"failure\"} helperText={result.errors && result.errors[\"password\"] && result.errors[\"password\"][0]} onChange={event => setPassword(event.target.value)} fullWidth margin=\"normal\" />\n                        <Button classes={{ root: classes.registerButtonRoot, label: classes.registerButtonText }} type=\"submit\" disabled={email === \"\" || password === \"\"} variant=\"contained\" color=\"secondary\" disableElevation fullWidth size=\"large\">Register</Button>\n                        <Typography className={classes.textNotice} color=\"textSecondary\" variant=\"caption\">Your user login &amp; data will be deleted<br />on container restart, and happens so<br />often as I'm running this on Free Tier<br /></Typography>\n                    </form>\n                </Paper>\n                <Typography className={classes.textLoginText} color=\"textSecondary\" variant=\"body2\">Already have an account? <Link className={classes.textLogin} to=\"/login\">Log In</Link></Typography>\n            </Container>\n            <Typography className={classes.textAttribution} color=\"textSecondary\" variant=\"body2\">Created by <a className={classes.textCreator}>Ismail Hashi</a></Typography>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}