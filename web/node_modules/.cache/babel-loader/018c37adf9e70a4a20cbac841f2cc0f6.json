{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ismailhashi/Projects/summarizer/frontend/src/views/Home/components/Todo/ContentTitle.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { InputBase, Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  inputTitleRoot: { ...theme.custom.fontFamily.metropolis,\n    padding: theme.spacing(1.5, 2, 0, 2)\n  },\n  inputTitleInput: {\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    padding: 0,\n    lineHeight: theme.spacing(0.18),\n    verticalAlign: \"middle\",\n    color: theme.palette.text.primary\n  },\n  textTitle: { ...theme.custom.fontFamily.metropolis,\n    padding: theme.spacing(1.5, 2, 0, 2),\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    color: theme.palette.text.primary,\n    lineHeight: theme.spacing(0.18),\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n}));\nexport default function ({\n  title,\n  setTitle,\n  isEditMode\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isEditMode ? /*#__PURE__*/_jsxDEV(InputBase, {\n      placeholder: \"Title\",\n      classes: {\n        root: classes.inputTitleRoot,\n        input: classes.inputTitleInput\n      },\n      inputProps: {\n        \"aria-label\": \"note title\"\n      },\n      value: title,\n      multiline: true,\n      onChange: event => setTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.textTitle,\n      variant: \"subtitle1\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/ismailhashi/Projects/summarizer/frontend/src/views/Home/components/Todo/ContentTitle.js"],"names":["React","makeStyles","InputBase","Typography","useStyles","theme","inputTitleRoot","custom","fontFamily","metropolis","padding","spacing","inputTitleInput","fontWeight","fontSize","lineHeight","verticalAlign","color","palette","text","primary","textTitle","display","flexWrap","title","setTitle","isEditMode","classes","root","input","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,cAAc,EAAE,EACd,GAAGD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,UADb;AAEdC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AAFK,GADqB;AAKrCC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE,GADG;AAEfC,IAAAA,QAAQ,EAAE,MAFK;AAGfJ,IAAAA,OAAO,EAAE,CAHM;AAIfK,IAAAA,UAAU,EAAEV,KAAK,CAACM,OAAN,CAAc,IAAd,CAJG;AAKfK,IAAAA,aAAa,EAAE,QALA;AAMfC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBC;AANX,GALoB;AAarCC,EAAAA,SAAS,EAAE,EACT,GAAGhB,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,UADlB;AAETC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFA;AAGTE,IAAAA,UAAU,EAAE,GAHH;AAITC,IAAAA,QAAQ,EAAE,MAJD;AAKTG,IAAAA,KAAK,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBC,OALjB;AAMTL,IAAAA,UAAU,EAAEV,KAAK,CAACM,OAAN,CAAc,IAAd,CANH;AAOTW,IAAAA,OAAO,EAAE,MAPA;AAQTC,IAAAA,QAAQ,EAAE;AARD;AAb0B,CAAL,CAAN,CAA5B;AAyBA,eAAe,UAAU;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAV,EAA2C;AACxD,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AAEA,sBACE;AAAA,cACGsB,UAAU,gBACT,QAAC,SAAD;AACE,MAAA,WAAW,EAAE,OADf;AAEE,MAAA,OAAO,EAAE;AACPE,QAAAA,IAAI,EAAED,OAAO,CAACrB,cADP;AAEPuB,QAAAA,KAAK,EAAEF,OAAO,CAACf;AAFR,OAFX;AAME,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OANd;AAOE,MAAA,KAAK,EAAEY,KAPT;AAQE,MAAA,SAAS,EAAE,IARb;AASE,MAAA,QAAQ,EAAGM,KAAD,IAAWL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AAT/B;AAAA;AAAA;AAAA;AAAA,YADS,gBAaP,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEL,OAAO,CAACN,SAA/B;AAA0C,MAAA,OAAO,EAAC,WAAlD;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA;AAdN,mBADF;AAqBD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { InputBase, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  inputTitleRoot: {\n    ...theme.custom.fontFamily.metropolis,\n    padding: theme.spacing(1.5, 2, 0, 2)\n  },\n  inputTitleInput: {\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    padding: 0,\n    lineHeight: theme.spacing(0.18),\n    verticalAlign: \"middle\",\n    color: theme.palette.text.primary\n  },\n  textTitle: {\n    ...theme.custom.fontFamily.metropolis,\n    padding: theme.spacing(1.5, 2, 0, 2),\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    color: theme.palette.text.primary,\n    lineHeight: theme.spacing(0.18),\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n}));\n\nexport default function ({ title, setTitle, isEditMode }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      {isEditMode ? (\n        <InputBase\n          placeholder={\"Title\"}\n          classes={{\n            root: classes.inputTitleRoot,\n            input: classes.inputTitleInput\n          }}\n          inputProps={{ \"aria-label\": \"note title\" }}\n          value={title}\n          multiline={true}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n      ) : (\n          <Typography className={classes.textTitle} variant=\"subtitle1\">\n            {title}\n          </Typography>\n        )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}