{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ismailhashi/Projects/summarizer/frontend/src/views/Home/components/Todo/Actions.js\";\nimport React, { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { PaletteOutlined as PaletteIcon, LabelOutlined as LabelIcon, DeleteOutlineOutlined as DeleteIcon, FileCopyOutlined as CopyIcon, CheckBoxOutlined as CheckBoxIcon, IndeterminateCheckBoxOutlined as HideCheckBoxIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport ColorPopover from \"./ColorPopover\";\nimport LabelPopover from \"./LabelPopover\"; // import { copyTodo, deleteTodo } from \"../../gql\";\n// import { useMutation } from \"urql\";\n// import { useTodosStore } from \"../../store\";\n\nconst useStyles = makeStyles(theme => ({\n  optionsWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  optionWrapperFirst: {\n    padding: theme.spacing(0, 1, 0, 0)\n  },\n  optionWrapperLast: {\n    padding: theme.spacing(0, 0, 0, 1)\n  },\n  optionWrapper: {\n    padding: theme.spacing(0, 1)\n  },\n  barClose: {}\n}));\nexport default function ({\n  id,\n  labels,\n  setLabels,\n  color,\n  setColor,\n  setCheckboxMode,\n  isCreateMode,\n  isCheckboxMode\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const refActionColor = useRef();\n  const refActionLabel = useRef();\n  const [isColorPopoverOpen, setColorPopoverOpen] = useState(false);\n  const [isLabelPopoverOpen, setLabelPopoverOpen] = useState(false); //const [, dispatchTodo] = useTodosStore();\n  //const [, copyNoteExecute] = useMutation(copyTodo);\n  //const [, deleteNoteExecute] = useMutation(deleteTodo);\n  // const copyNote = () => {\n  //   copyNoteExecute({ id }).then(({ data }) => {\n  //     dispatchTodo({ type: \"CREATED\", payload: data.copyTodo });\n  //   });\n  // }\n  // const deleteNote = () => {\n  //   deleteNoteExecute({ id }).then(({ data }) => {\n  //     dispatchTodo({ type: \"DELETED\", payload: data.deleteTodo });\n  //   });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.optionsWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.optionWrapperFirst,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Change color\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            \"aria-label\": \"change color\",\n            ref: refActionColor,\n            onClick: () => setColorPopoverOpen(true),\n            children: /*#__PURE__*/_jsxDEV(PaletteIcon, {\n              htmlColor: theme.custom.palette.iconHighlight,\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.optionWrapper,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Show checkboxes\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            \"aria-label\": \"show checkboxes\",\n            onClick: () => setCheckboxMode(!isCheckboxMode),\n            children: isCheckboxMode ? /*#__PURE__*/_jsxDEV(HideCheckBoxIcon, {\n              htmlColor: theme.custom.palette.iconHighlight,\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n              htmlColor: theme.custom.palette.iconHighlight,\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.optionWrapper,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Change labels\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            \"aria-label\": \"change labels\",\n            ref: refActionLabel,\n            onClick: () => setLabelPopoverOpen(true),\n            children: /*#__PURE__*/_jsxDEV(LabelIcon, {\n              htmlColor: theme.custom.palette.iconHighlight,\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), isCreateMode ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.optionWrapper,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Make a copy\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              \"aria-label\": \"make a copy\",\n              children: /*#__PURE__*/_jsxDEV(CopyIcon, {\n                htmlColor: theme.custom.palette.iconHighlight,\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.optionWrapperLast,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Delete note\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              \"aria-label\": \"delete note\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                htmlColor: theme.custom.palette.iconHighlight,\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorPopover, {\n      anchorEl: refActionColor.current,\n      isOpen: isColorPopoverOpen,\n      onClose: () => setColorPopoverOpen(false),\n      currentColor: color,\n      onColorSelect: color => setColor(color)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelPopover, {\n      anchorEl: refActionLabel.current,\n      isOpen: isLabelPopoverOpen,\n      setLabels: setLabels,\n      labels: labels,\n      onClose: () => setLabelPopoverOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/ismailhashi/Projects/summarizer/frontend/src/views/Home/components/Todo/Actions.js"],"names":["React","useRef","useState","makeStyles","IconButton","Tooltip","PaletteOutlined","PaletteIcon","LabelOutlined","LabelIcon","DeleteOutlineOutlined","DeleteIcon","FileCopyOutlined","CopyIcon","CheckBoxOutlined","CheckBoxIcon","IndeterminateCheckBoxOutlined","HideCheckBoxIcon","useTheme","ColorPopover","LabelPopover","useStyles","theme","optionsWrapper","display","flexDirection","justifyContent","optionWrapperFirst","padding","spacing","optionWrapperLast","optionWrapper","barClose","id","labels","setLabels","color","setColor","setCheckboxMode","isCreateMode","isCheckboxMode","classes","refActionColor","refActionLabel","isColorPopoverOpen","setColorPopoverOpen","isLabelPopoverOpen","setLabelPopoverOpen","custom","palette","iconHighlight","current"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport {\n  PaletteOutlined as PaletteIcon,\n  LabelOutlined as LabelIcon,\n  DeleteOutlineOutlined as DeleteIcon,\n  FileCopyOutlined as CopyIcon,\n  CheckBoxOutlined as CheckBoxIcon,\n  IndeterminateCheckBoxOutlined as HideCheckBoxIcon\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport ColorPopover from \"./ColorPopover\";\nimport LabelPopover from \"./LabelPopover\";\n// import { copyTodo, deleteTodo } from \"../../gql\";\n// import { useMutation } from \"urql\";\n// import { useTodosStore } from \"../../store\";\n\nconst useStyles = makeStyles(theme => ({\n  optionsWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  optionWrapperFirst: {\n    padding: theme.spacing(0, 1, 0, 0)\n  },\n  optionWrapperLast: {\n    padding: theme.spacing(0, 0, 0, 1)\n  },\n  optionWrapper: {\n    padding: theme.spacing(0, 1)\n  },\n  barClose: {}\n}));\n\nexport default function ({ id, labels, setLabels, color, setColor, setCheckboxMode, isCreateMode, isCheckboxMode }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const refActionColor = useRef();\n  const refActionLabel = useRef();\n  const [isColorPopoverOpen, setColorPopoverOpen] = useState(false);\n  const [isLabelPopoverOpen, setLabelPopoverOpen] = useState(false);\n  //const [, dispatchTodo] = useTodosStore();\n  //const [, copyNoteExecute] = useMutation(copyTodo);\n  //const [, deleteNoteExecute] = useMutation(deleteTodo);\n\n  // const copyNote = () => {\n  //   copyNoteExecute({ id }).then(({ data }) => {\n  //     dispatchTodo({ type: \"CREATED\", payload: data.copyTodo });\n  //   });\n  // }\n\n  // const deleteNote = () => {\n  //   deleteNoteExecute({ id }).then(({ data }) => {\n  //     dispatchTodo({ type: \"DELETED\", payload: data.deleteTodo });\n  //   });\n  // }\n\n  return (\n    <>\n      <div className={classes.optionsWrapper}>\n        <div className={classes.optionWrapperFirst}>\n          <Tooltip title=\"Change color\">\n            <IconButton\n              size=\"small\"\n              aria-label=\"change color\"\n              ref={refActionColor}\n              onClick={() => setColorPopoverOpen(true)}\n            >\n              <PaletteIcon\n                htmlColor={theme.custom.palette.iconHighlight}\n                fontSize=\"small\"\n              />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className={classes.optionWrapper}>\n          <Tooltip title=\"Show checkboxes\">\n            <IconButton\n              size=\"small\"\n              aria-label=\"show checkboxes\"\n              onClick={() => setCheckboxMode(!isCheckboxMode)}\n            >\n              {isCheckboxMode ? (\n                <HideCheckBoxIcon\n                  htmlColor={theme.custom.palette.iconHighlight}\n                  fontSize=\"small\"\n                />\n              ) : (\n                  <CheckBoxIcon\n                    htmlColor={theme.custom.palette.iconHighlight}\n                    fontSize=\"small\"\n                  />\n                )}\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className={classes.optionWrapper}>\n          <Tooltip title=\"Change labels\">\n            <IconButton\n              size=\"small\"\n              aria-label=\"change labels\"\n              ref={refActionLabel}\n              onClick={() => setLabelPopoverOpen(true)}\n            >\n              <LabelIcon\n                htmlColor={theme.custom.palette.iconHighlight}\n                fontSize=\"small\"\n              />\n            </IconButton>\n          </Tooltip>\n        </div>\n        {isCreateMode ? null : (\n          <>\n            <div className={classes.optionWrapper}>\n              <Tooltip title=\"Make a copy\">\n                <IconButton\n                  size=\"small\"\n                  aria-label=\"make a copy\"\n                >\n                  <CopyIcon\n                    htmlColor={theme.custom.palette.iconHighlight}\n                    fontSize=\"small\"\n                  />\n                </IconButton>\n              </Tooltip>\n            </div>\n\n            <div className={classes.optionWrapperLast}>\n              <Tooltip title=\"Delete note\">\n                <IconButton\n                  size=\"small\"\n                  aria-label=\"delete note\"\n                >\n                  <DeleteIcon\n                    htmlColor={theme.custom.palette.iconHighlight}\n                    fontSize=\"small\"\n                  />\n                </IconButton>\n              </Tooltip>\n            </div>\n          </>\n        )}\n      </div>\n      <ColorPopover\n        anchorEl={refActionColor.current}\n        isOpen={isColorPopoverOpen}\n        onClose={() => setColorPopoverOpen(false)}\n        currentColor={color}\n        onColorSelect={color => setColor(color)}\n      />\n      <LabelPopover\n        anchorEl={refActionLabel.current}\n        isOpen={isLabelPopoverOpen}\n        setLabels={setLabels}\n        labels={labels}\n        onClose={() => setLabelPopoverOpen(false)}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}